1/18/17

Making a change to be able to commit to git.



Ah, after installing how to access the sublime interface from terminal I barely remember what I just learned! ha.

I think I learned about diff'ing files through terminal. I'm now starting to understand why Bob was always so frustrated with me and my fancy interfaces. lol.

My actual writing prompts...

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Without being able to have a computer do the character by character search of the file, it was almost impossible to find the ! vs the 1. Keeping an old version helped to find the single character change that made it break.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Seeing the history of your project's creation can help you pinpoint problems and when they originated.  Or if you want to go on a tangent and try new code...and it doesn't work out, you can go back to your original version easily.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: not tying up the network with excess transfer and you may not want to commit, also, automatically saving my save over something you didn't want changed in the first place

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    you sometimes need to update more than one file at a time for apps to work

How can you use the commands git log and git diff to view the history of files?

    --

How might using version control make you more confident to make changes that
could break something?

    Knowing I had my original saved, I can play around for sure.

Now that you have your workspace set up, what do you want to try using Git for?

    Email newsletter coding

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	If you make an error it will be easier to find what part of the program isn't working, faster!
    